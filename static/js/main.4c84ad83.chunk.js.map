{"version":3,"sources":["PortfolioTab.js","tickers.js","PortfolioForm.js","PortfolioValueTab.js","Portfolio.js","PortfolioPage.js","Signup.js","Login.js","App.js","index.js"],"names":["PortfolioTab","props","state","id","ticker","quantity","priceBoughtAt","price","value","editMode","processEdit","bind","handleChange","processDelete","submit","cancel","this","setState","handleDelete","e","preventDefault","handleEdit","target","name","posOrNeg","editBox","onSubmit","className","type","max","min","onChange","onClick","buttons","toFixed","commaNumber","Math","abs","Component","listOfAvailableTickers","PortfolioForm","onValueChange","submitForm","includes","handleAdd","alert","toUpperCase","href","htmlFor","PortfolioValueTab","totalValue","gainOrLoss","Portfolio","portfolioProfile","portfolioList","assetPrices","portfolio","portfolioTotal","renderAssets","makePortfolio","calculateTotalPrice","profile","listOfAssets","listOfPrices","asset","Number","totalAssetValue","newAssetNode","newQuantity","updatedEntry","axios","patch","process","withCredentials","get","response","data","newPortfolio","post","Object","keys","length","addObject","console","log","deleteEntry","delete","totalSpent","assets","map","key","userName","logout","PortfolioPage","isLoaded","sendInfo","user","email","Signup","password1","password2","emailError","passwordError","signupError","signupCompleted","signup","userInfo","password","tokens","params","err","to","placeholder","Login","isInvalid","handleSubmit","login","exact","path","render","App","loggedIn","playground","cookieData","Cookies","set","token","expires","status","remove","window","location","reload","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4c84ad83.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './styles/PortfolioTab.css'\r\nimport commaNumber from 'comma-number'\r\n\r\nclass PortfolioTab extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.id,\r\n            ticker: '',\r\n            quantity : 0,\r\n            priceBoughtAt: 0,\r\n            price: 0,\r\n            value: 0,\r\n            editMode: false\r\n        };\r\n        this.processEdit = this.processEdit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.processDelete = this.processDelete.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.cancel = this.cancel.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        let value = this.props.price * this.props.quantity\r\n        let price = (this.props.price) // only way to apply toFixed and commaNumber\r\n        let priceBoughtAt = this.props.priceBoughtAt\r\n       \r\n        this.setState({\r\n            id: this.props.id,\r\n            ticker:this.props.ticker, \r\n            quantity: this.props.quantity, \r\n            priceBoughtAt: priceBoughtAt,\r\n            price: price,\r\n            value: value,\r\n        })\r\n        \r\n    }\r\n   \r\n    processEdit(){\r\n        this.setState({editMode: !this.state.editMode})\r\n      \r\n    }\r\n\r\n    processDelete(){\r\n        this.props.handleDelete(this.props.id)\r\n        \r\n    }\r\n    submit(e){\r\n        e.preventDefault()\r\n        let value = this.state.quantity * this.state.price\r\n        this.setState({editMode: !this.state.editMode, value: value})\r\n        this.props.handleEdit(this.state.ticker, this.state.quantity, this.state.priceBoughtAt)\r\n    \r\n    }\r\n    cancel(){\r\n        this.setState({editMode: !this.state.editMode})\r\n        let value = this.props.price * this.props.quantity\r\n        let price = (this.props.price) // only way to apply toFixed and commaNumber\r\n        let priceBoughtAt = this.props.priceBoughtAt\r\n       \r\n        this.setState({\r\n            ticker:this.props.ticker, \r\n            quantity: this.props.quantity, \r\n            priceBoughtAt: priceBoughtAt,\r\n            price: price,\r\n            value: value,\r\n        })\r\n    }\r\n   \r\n    handleChange(e){\r\n        e.preventDefault()\r\n        this.setState({[e.target.name]: e.target.value})\r\n        \r\n    }\r\n\r\n    render() {\r\n        let editBox = \r\n        <div>\r\n            <form onSubmit={this.submit}>\r\n                <input \r\n                name=\"quantity\"\r\n                className=\"PortfolioTab-editBox\"\r\n                type=\"number\"\r\n                max={100000000}\r\n                min={1}\r\n                value={this.state.quantity}\r\n                onChange={this.handleChange}\r\n                />\r\n                <input \r\n                name=\"priceBoughtAt\"\r\n                className=\"PortfolioTab-editBox\"\r\n                type=\"number\"\r\n                max={100000000}\r\n                min={0}\r\n                value={this.state.priceBoughtAt}\r\n                onChange={this.handleChange}\r\n                />\r\n                <button className=\"PortfolioTab-submit PortfolioTab-btns\" type=\"submit\">Save</button>\r\n                <button className=\"PortfolioTab-cancel PortfolioTab-btns\" onClick={this.cancel}>Cancel</button>\r\n            </form>\r\n            \r\n        </div>\r\n        \r\n        let buttons = \r\n        <div className=\"PortfolioTab-btns\">\r\n            <button className=\"PortfolioTab-edit\" onClick={this.processEdit}><i className=\"fa fa-bars\"></i></button>\r\n            <button className=\"PortfolioTab-delete\" onClick={this.processDelete}><i className=\"fa fa-trash\"></i></button>\r\n        </div>\r\n        \r\n        let price, priceBoughtAt, value, posOrNeg;\r\n        price = this.state.price\r\n        priceBoughtAt = this.state.priceBoughtAt\r\n        value = this.state.value\r\n        \r\n        price = price.toFixed(2)\r\n        value = value.toFixed(2)\r\n        \r\n        price = commaNumber(price)\r\n        value = commaNumber(value)\r\n        priceBoughtAt = commaNumber(priceBoughtAt)\r\n        \r\n        posOrNeg = (this.state.price - this.state.priceBoughtAt) * this.state.quantity\r\n        posOrNeg = posOrNeg.toFixed(2)\r\n      \r\n       \r\n        return(\r\n\r\n                <div className=\"Portfolio-tab\">\r\n                    <p>{this.state.ticker}</p>\r\n                    {this.state.editMode ? editBox: <p>Quantity: {this.state.quantity}</p>}\r\n                    <p>Current Price: {`$${price}`}</p>\r\n                    <p>Aquisition Cost: {`$${priceBoughtAt}`}</p>\r\n                    <p>Total Value: {`$${value}`}</p>\r\n                    <p className={(posOrNeg < 0 ? \"red\" : \"green\")}>+/- {`$${commaNumber(Math.abs(posOrNeg))}`}</p>\r\n                    {this.state.editMode ? \"\" : buttons}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PortfolioTab;","var listOfAvailableTickers = ['AAPL',\r\n            'AXP',\r\n            'BA',\r\n            'CAT',\r\n            'CSCO',\r\n            'CVX',\r\n            'DIS',\r\n            'DWDP',\r\n            'GE',\r\n            'GS',\r\n            'HD',\r\n            'IBM',\r\n            'INTC',\r\n            'JNJ',\r\n            'JPM',\r\n            'KO',\r\n            'MCD',\r\n            'MMM',\r\n            'MRK',\r\n            'MSFT',\r\n            'NKE',\r\n            'PFE',\r\n            'PG',\r\n            'TRV',\r\n            'UNH',\r\n            'UTX',\r\n            'V',\r\n            'VZ',\r\n            'WMT',\r\n            'XOM']\r\n\r\nexport { listOfAvailableTickers };\r\n","import React, { Component } from 'react'\r\nimport './styles/PortfolioForm.css'\r\nimport {listOfAvailableTickers} from './tickers'\r\n\r\nclass PortfolioForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             ticker: \"MRK\",\r\n             quantity: 1,\r\n             priceBoughtAt: 0\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this)\r\n        this.submitForm = this.submitForm.bind(this)\r\n    }\r\n \r\n    submitForm(e){\r\n        e.preventDefault()\r\n        const ticker = this.state.ticker\r\n        if(listOfAvailableTickers.includes(ticker)){\r\n            this.props.handleAdd(ticker, this.state.quantity, this.state.priceBoughtAt)\r\n\r\n        }\r\n        else{\r\n            alert(\"This ticker is not available please enter one from this list:\\n\\n https://product.intrinio.com/developer-sandbox/coverage/us-fundamentals-financials-metrics-ratios-stock-prices\\n\\n For example try: 'MRK'\")\r\n        }\r\n\r\n\r\n    }\r\n\r\n    onValueChange(e){\r\n        this.setState({[e.target.name]: (e.target.name === 'ticker') ? e.target.value.toUpperCase() : e.target.value})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Portfolio-form\">\r\n                <a href={\"https://product.intrinio.com/developer-sandbox/coverage/us-fundamentals-financials-metrics-ratios-stock-prices\"}>Available assets?</a>\r\n                        <form onSubmit={this.submitForm}>\r\n                        <h4 id=\"title\">Add New Assets</h4>\r\n                            <label htmlFor=\"ticker\"/>\r\n                            <p className=\"PortfolioForm-text\">Ticker</p>\r\n                            <input \r\n                            className=\"Portfolio-form-ticker-input\"\r\n                            type=\"text\"\r\n                            name=\"ticker\"\r\n                            value={this.state.ticker}\r\n                            onChange={this.onValueChange}\r\n                            />\r\n                            <p className=\"PortfolioForm-text\">Quantity</p> \r\n                            <label htmlFor=\"quantity\"/>\r\n                            <input \r\n                            className=\"Portfolio-form-quantity-input\"\r\n                            type=\"number\"\r\n                            name=\"quantity\"\r\n                            min={1}\r\n                            max={1000000000}\r\n                            value={this.state.quantity}\r\n                            onChange={this.onValueChange}\r\n                            />\r\n                            <p className=\"PortfolioForm-text\">Aquisition Cost</p>  \r\n                            <label htmlFor=\"priceBoughtAt\"/>\r\n                            <input \r\n                            className=\"Portfolio-form-priceBoughtAt-input\"\r\n                            type=\"number\"\r\n                            name=\"priceBoughtAt\"\r\n                            min={0}\r\n                            max={1000000000}\r\n                            value={this.state.priceBoughtAt}\r\n                            onChange={this.onValueChange}\r\n                            />\r\n                            <button className=\"Portfolio-form-submit\">Add</button>\r\n                        </form>\r\n                        \r\n                        \r\n               \r\n            </div>\r\n            )\r\n        }\r\n\r\n}\r\n\r\nexport default PortfolioForm;","import React, { Component } from 'react'\r\nimport \"./styles/PortfolioValueTab.css\"\r\nimport commaNumber from 'comma-number'\r\n\r\nclass PortfolioValueTab extends Component{\r\n\r\n    render(){\r\n        let totalValue = this.props.totalValue\r\n        let gainOrLoss = this.props.gainOrLoss\r\n        gainOrLoss = (gainOrLoss).toFixed(2)\r\n        totalValue = totalValue.toFixed(2)\r\n        totalValue = commaNumber(totalValue)\r\n        return(\r\n            <div className=\"PortfolioValueTab\">\r\n                <p >Portfolio Value: ${totalValue}</p>\r\n                <p className={(this.props.gainOrLoss < 0 \r\n                    ? \"red\" :\r\n                     \"green\")}>Overall +/- {`$${commaNumber(Math.abs(gainOrLoss))}`} </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PortfolioValueTab","import React, { Component } from 'react'\r\nimport './styles/Portfolio.css'\r\nimport PortfolioTab from \"./PortfolioTab\";\r\nimport PortfolioForm from \"./PortfolioForm\"\r\nimport PortfolioValueTab from \"./PortfolioValueTab\"\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nclass Portfolio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             portfolioProfile: {portfolioList: {}, assetPrices: {}},\r\n             portfolio: [],\r\n             portfolioTotal: 0,\r\n             gainOrLoss: 0\r\n        }\r\n    \r\n       this.renderAssets = this.renderAssets.bind(this)\r\n       this.makePortfolio = this.makePortfolio.bind(this)\r\n       this.handleEdit = this.handleEdit.bind(this)\r\n       this.handleAdd = this.handleAdd.bind(this)\r\n       this.handleDelete = this.handleDelete.bind(this)\r\n       this.calculateTotalPrice = this.calculateTotalPrice.bind(this) \r\n     \r\n    }\r\n    async componentDidMount(){\r\n        await this.setState({portfolioProfile: this.props.profile})\r\n        await this.makePortfolio()\r\n        this.calculateTotalPrice()\r\n    }\r\n    \r\n    makePortfolio(){\r\n        let portfolioList = {} // [ticker,quantityOwned, price]\r\n        let id = 0\r\n        const listOfAssets = this.state.portfolioProfile.portfolioList\r\n        const listOfPrices = this.state.portfolioProfile.assetPrices\r\n        \r\n        let totalValue = 0;\r\n        for (let asset in listOfAssets){\r\n            let quantity = listOfAssets[asset][0]\r\n            let priceBoughtAt = Number(listOfAssets[asset][1])\r\n            let price = listOfPrices[asset]\r\n            let totalAssetValue = quantity * price;\r\n            let newAssetNode = [quantity, price, totalAssetValue,priceBoughtAt, id]\r\n            portfolioList[asset] = newAssetNode\r\n            totalValue += totalAssetValue\r\n            id++\r\n            //console.log(\"Node\",newAssetNode)\r\n            \r\n        }\r\n        this.setState({portfolio: portfolioList, portfolioTotal: totalValue})\r\n       \r\n        \r\n    }\r\n\r\n    async handleEdit(ticker, newQuantity, priceBoughtAt){\r\n        let updatedEntry = {}\r\n        updatedEntry['update'] = [ticker, Number(newQuantity),Number(priceBoughtAt)]\r\n        await axios.patch(`${process.env.REACT_APP_URL}/users/portfolio/update`,updatedEntry,{withCredentials: true} )\r\n        \r\n        let response = await axios.get(`${process.env.REACT_APP_URL}/portfolio`,  {withCredentials: true})\r\n        this.setState({portfolioProfile: {portfolioList: response.data.portfolio, assetPrices: response.data.assetPrices}})\r\n        this.makePortfolio()\r\n        this.calculateTotalPrice()\r\n    }\r\n    async handleAdd(ticker, quantity, priceBoughtAt ){\r\n        //[quantity, price, totalAssetValue,priceBoughtAt, id]\r\n        let newPortfolio = this.state.portfolio\r\n        let response = await axios.post(`${process.env.REACT_APP_URL}/users/portfolio/get-ticker`, {\"ticker\": ticker},{withCredentials: true})\r\n        let totalAssetValue = response.data.price * quantity\r\n        newPortfolio[ticker] = [quantity, response.data.price, totalAssetValue,priceBoughtAt, Object.keys(newPortfolio).length]\r\n        const addObject = {}\r\n        addObject[\"ticker\"] = [ticker, newPortfolio]\r\n        console.log(newPortfolio[ticker])\r\n        await axios.patch(`${process.env.REACT_APP_URL}/users/portfolio/add`, addObject,{withCredentials: true} )\r\n        this.setState({ portfolio: newPortfolio })\r\n    }\r\n\r\n    async handleDelete(id){\r\n        let newPortfolio = this.state.portfolio\r\n        let ticker = \"\"\r\n        for(let asset in this.state.portfolio){ //can't be for ... asset in newPortfolio because of bugs when delete execs\r\n            console.log(newPortfolio, id)\r\n            if (newPortfolio[asset][4] === id){\r\n                ticker = asset\r\n                delete newPortfolio[asset]\r\n                \r\n            }\r\n\r\n        }\r\n        this.calculateTotalPrice()\r\n        this.setState({portfolio: newPortfolio})\r\n        let deleteEntry = {delete: ticker}\r\n        await axios.patch(`${process.env.REACT_APP_URL}/users/portfolio/delete`,deleteEntry,{withCredentials: true} )\r\n\r\n    }\r\n    calculateTotalPrice(){\r\n        // {ticker : [quantity, price, totalAssetValue,priceBoughtAt, id]}\r\n        const portfolio = this.state.portfolio\r\n        let totalValue = 0\r\n        let totalSpent = 0\r\n        for (let asset in portfolio){\r\n            totalValue += portfolio[asset][2]\r\n            totalSpent += portfolio[asset][3] * portfolio[asset][0]\r\n        }\r\n      \r\n        this.setState({ portfolioTotal: totalValue, gainOrLoss: totalValue - totalSpent})\r\n    }\r\n\r\n    renderAssets(){\r\n        const assets = this.state.portfolio\r\n\r\n        return Object.keys(assets).map(asset => \r\n          <PortfolioTab key={asset} \r\n          id={assets[asset][4]}\r\n          ticker={asset} \r\n          quantity={assets[asset][0]} \r\n          price={assets[asset][1]} \r\n          priceBoughtAt={assets[asset][3]}\r\n          handleEdit={this.handleEdit}\r\n          handleDelete={this.handleDelete}\r\n          />\r\n        )\r\n    }\r\n\r\n \r\n\r\n    render() {\r\n\r\n        return(\r\n            <div id=\"wrapper\" className=\"Portfolio \">\r\n                <p className=\"Portfolio-greeting\">Hello {this.props.userName}</p>\r\n                <button className=\"Portfolio-logout\" onClick={this.props.logout}>Log Out</button>\r\n                <h3>Your Portfolio</h3>\r\n                <PortfolioForm className=\"Portfolio-form\" handleAdd={this.handleAdd}/> \r\n                {this.renderAssets()}\r\n                <br></br>\r\n                <PortfolioValueTab totalValue={this.state.portfolioTotal} gainOrLoss={this.state.gainOrLoss}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Portfolio;\r\n\r\n","import React, { Component } from 'react'\r\nimport Portfolio from \"./Portfolio\"\r\nimport './styles/PortfolioPage.css'\r\n\r\n\r\n\r\nclass PortfolioPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            profile: {portfolioList: {}, assetPrices: {}},\r\n            isLoaded: false\r\n        }\r\n        this.sendInfo = this.sendInfo.bind(this)\r\n     \r\n\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.setState({\r\n            profile: {portfolioList: this.props.user.portfolio,\r\n                assetPrices: this.props.user.assetPrices\r\n        }, isLoaded: true})\r\n      \r\n    }\r\n\r\n    async sendInfo(e){\r\n        e.preventDefault()\r\n        alert(e.target.value)\r\n    }\r\n    render(){\r\n        let display;\r\n        (this.state.isLoaded ? display = <div className=\"PortfolioPagebackground-color: grey;-profile\">\r\n            <Portfolio userName={this.props.user.email} profile={this.state.profile} logout={this.props.logout}/>\r\n            </div>\r\n            :\r\n            display = <div> Loading... </div>)\r\n\r\n        return (\r\n            \r\n                display\r\n            \r\n        )\r\n    };\r\n}\r\n\r\nexport default PortfolioPage;","import React, { Component } from \"react\";\r\nimport \"./styles/Signup.css\";\r\nimport axios from \"axios\";\r\nimport { Redirect, Router, Route } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            email: \"testfolio@test.com\",\r\n            password1: \"test123\",\r\n            password2: \"test123\",\r\n            emailError: false,\r\n            passwordError: false,\r\n            signupError: false,\r\n            signupCompleted: false,\r\n        };\r\n        this.signup = this.signup.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    async signup(e) {\r\n        e.preventDefault();\r\n        if (this.state.password1 !== this.state.password2) {\r\n            this.setState({ passwordError: true });\r\n        }\r\n        const userInfo = {\r\n            email: this.state.email,\r\n            password: this.state.password1,\r\n            portfolio: {},\r\n            tokens: {},\r\n        };\r\n        try {\r\n            const response = await axios.post(\r\n                `${process.env.REACT_APP_URL}/signup`,\r\n                { params: userInfo },\r\n                { withCredentials: true }\r\n            );\r\n            if (response.data.err) this.setState({ emailError: true });\r\n            this.setState({ signupCompleted: true });\r\n            return <Redirect to=\"/login\"></Redirect>;\r\n        } catch (err) {\r\n            this.setState({ signupError: true });\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Signup\">\r\n                <h3 className=\"Signup-title\">Sign up</h3>\r\n\r\n                {this.state.passwordError ? (\r\n                    <p className=\"error\">Password don't match</p>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                {this.state.emailError ? (\r\n                    <p className=\"error\">\r\n                        An account with email already exists\r\n                    </p>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                {this.state.signupError ? (\r\n                    <p className=\"error\">Something went wrong</p>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n                {this.state.signupCompleted &&\r\n                !this.state.signupError &&\r\n                !this.state.emailError &&\r\n                !this.state.passwordError ? (\r\n                    <p className=\"success\">Thank you for signing up! </p>\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n                <form className=\"Signup-form\" onSubmit={this.signup}>\r\n                    <label className=\"Signup-label\" htmlFor=\"email\" />\r\n                    <input\r\n                        className=\"Signup-input\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <label className=\"Signup-label\" htmlFor=\"password\" />\r\n                    <input\r\n                        className=\"Signup-input\"\r\n                        name=\"password1\"\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={this.state.password1}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <label className=\"Signup-label\" htmlFor=\"password\" />\r\n                    <input\r\n                        className=\"Signup-input\"\r\n                        name=\"password2\"\r\n                        type=\"password\"\r\n                        placeholder=\"Retype your Password\"\r\n                        value={this.state.password2}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <button className=\"Signup-button\">Sign up</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;\r\n","import React, { Component} from 'react';\r\nimport \"./styles/Login.css\"\r\nimport {Switch, Link, Route} from 'react-router-dom'\r\nimport PortfolioPage from './PortfolioPage'\r\nimport Signup from './Signup'\r\nimport axios from 'axios'\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             email: \"testfolio@test.com\",\r\n             password: \"test123\",\r\n             isInvalid: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    async handleSubmit(e){\r\n        e.preventDefault()\r\n        const userInfo = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n       \r\n        const response = await axios.post(`${process.env.REACT_APP_URL}/login`, {params: userInfo},{withCredentials: true})\r\n        if(response.data !== \"\"){\r\n            this.props.login(response.data) \r\n        }\r\n        else\r\n            this.setState({isInvalid: true})\r\n\r\n\r\n    }\r\n\r\n    handleChange (e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Login\">\r\n                \r\n                <h3 className=\"Login-title\">Portfolio</h3>\r\n                {this.state.isInvalid ? <p className=\"red\"> Invalid login </p> : \"\"}\r\n                <form className=\"Login-form\" onSubmit={this.handleSubmit}>\r\n                    <label className=\"Login-label\" htmlFor=\"email\"/>\r\n                    <input\r\n                    className=\"Login-input\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                    <label className=\"Login-label\" htmlFor=\"password\"/>\r\n                    <input\r\n                    className=\"Login-input\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    />\r\n                    <button className=\"Login-button\">Login</button>\r\n                    <Link exact to='/signup'> Sign Up </Link>\r\n                </form>\r\n                <Switch>\r\n                    <Route exact path=\"/signup\" render={() => <Signup/>}/>\r\n                    <Route exact path=\"/portfolio\" render={() => <PortfolioPage logout={this.logout} user={this.state.user}/>}/>\r\n                </Switch>   \r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Login","import React, {Component} from 'react';\r\nimport PortfolioPage from \"./PortfolioPage\"\r\nimport Login from './Login'\r\nimport Signup from \"./Signup\"\r\nimport './styles/App.css';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'\r\nimport {Switch, Route,Redirect} from 'react-router-dom'\r\n//require('dotenv').config() would need but i have create-react-app\r\n\r\nclass App extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       user: {},\r\n       loggedIn: false,\r\n\r\n    }\r\n    this.login = this.login.bind(this)\r\n    this.logout = this.logout.bind(this)\r\n    this.playground = this.playground.bind(this)\r\n  \r\n  }\r\n  async componentDidMount(){\r\n    try{\r\n        const response = await axios.get(`${process.env.REACT_APP_URL}/portfolio`, {withCredentials: true})\r\n        console.log(response.data)\r\n        this.setState({loggedIn: true, user: response.data})\r\n    \r\n  }\r\n    catch (err) {\r\n      console.log(\"Not logined in\")\r\n    }\r\n  }\r\n  \r\n  async login(cookieData) {\r\n    Cookies.set(\"token\", cookieData.token, { expires: 7 })\r\n    Cookies.set(\"id\", cookieData.id, { expires: 7 })\r\n\r\n    try{\r\n      const response = await axios.get(`${process.env.REACT_APP_URL}/portfolio`, {withCredentials: true})\r\n      if(response.status < 400) {\r\n        this.setState({user: response.data, loggedIn: true})\r\n      \r\n      }\r\n  }\r\n    catch(err) {\r\n      console.log(\"Error getting your profile\")\r\n    }\r\n  }\r\n    //console.log(response)\r\n    \r\n  logout(){\r\n    this.setState({loggedIn: false})\r\n    Cookies.remove('token');\r\n    Cookies.remove('id');\r\n    window.location.reload();\r\n \r\n  }\r\n\r\n  playground(){\r\n    alert(\"This is playground mode, any changes you make won't be saved. Make an account if you'd like this app to remember your assets.\")\r\n    this.setState({loggedIn:true})\r\n  }\r\n\r\n  render(){\r\n\r\n    /*\r\n      <div id=\"wrapper\">\r\n        {(this.state.loggedIn && this.state.user !== {}) ? <PortfolioPage logout={this.logout} user={this.state.user}/> : <Login login={this.login}/>}  \r\n        {!this.state.loggedIn ? <button onClick={this.playground}>Test the app</button> : \"\"}\r\n      </div>\r\n*/\r\n    return (\r\n      <div id=\"wrapper\">\r\n      {(this.state.loggedIn && this.state.user !== {}) ? <Redirect to=\"/portfolio\"/> : <Redirect to=\"/\"/>}  \r\n      {!this.state.loggedIn ? <button onClick={this.playground}>Test the app</button> : \"\"}\r\n\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Login login={this.login}/>}/>\r\n        <Route exact path=\"/portfolio\" render={() => <PortfolioPage logout={this.logout} user={this.state.user}/>}/>\r\n        <Route exact path=\"/signup\" render={() => <Signup/>}/>\r\n      </Switch>\r\n    </div>\r\n\r\n    )\r\n  };\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App/>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}